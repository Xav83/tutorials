---
trigger:
  - main

parameters:
  - name: xcodeVersions
    type: object
    default:
      macOS_13:
        name: macOS-13
        version: ['Xcode_15.0', 'Xcode_14.3.1', 'Xcode_14.2', 'Xcode_14.1']   # yamllint disable-line rule:line-length
      macOS_12:
        name: macOS-12
        version: ['Xcode_14.2', 'Xcode_14.1', 'Xcode_14.0.1', 'Xcode_13.4.1', 'Xcode_13.3.1', 'Xcode_13.2.1', 'Xcode_13.1']   # yamllint disable-line rule:line-length
      macOS_11:
        name: macOS-11
        version: ['Xcode_13.2.1', 'Xcode_13.1', 'Xcode_13.0', 'Xcode_12.5.1', 'Xcode_12.4', 'Xcode_11.7']   # yamllint disable-line rule:line-length

jobs:
  - job: Chocolatey_test_environment
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
      - script: |
          cd "Chocolatey test environment on Ubuntu"
          sh setup.sh
          error_code=$?
          if [[ $error_code -eq 0 ]]; then
              exit 1
          fi
          exit 0
        displayName: Sets up the test environment of Chocolatey tests on Ubuntu
  - ${{ each xcodeVersion in parameters.xcodeVersions }}:
      - job: Xcode_version_${{ xcodeVersion.key }}
        pool:
          vmImage: '${{ xcodeVersion.value.name }}'
        steps:
          - template: './Xcode version/azure-pipelines.yml'
            parameters:
              xcode_versions: ${{ xcodeVersion.value.version }}
  - job: Yaml_linter
    strategy:
      matrix:
        windows_latest:
          imageName: 'windows-latest'
        windows_2022:
          imageName: 'windows-2022'
        windows_2019:
          imageName: 'windows-2019'
        mac_13:
          imageName: 'macOS-13'
        mac_12:
          imageName: 'macOS-12'
        mac_11:
          imageName: 'macOS-11'
        linux_latest:
          imageName: 'ubuntu-latest'
        linux_20_04:
          imageName: 'ubuntu-20.04'
        linux_18_04:
          imageName: 'ubuntu-18.04'
    pool:
      vmImage: $(imageName)
    steps:
      - template: './Yaml lint/azure-pipelines.yml'
  - job: Python_format
    strategy:
      matrix:
        windows_latest:
          imageName: 'windows-latest'
        windows_2022:
          imageName: 'windows-2022'
        windows_2019:
          imageName: 'windows-2019'
        mac_13:
          imageName: 'macOS-13'
        mac_12:
          imageName: 'macOS-12'
        mac_11:
          imageName: 'macOS-11'
        linux_latest:
          imageName: 'ubuntu-latest'
        linux_20_04:
          imageName: 'ubuntu-20.04'
        linux_18_04:
          imageName: 'ubuntu-18.04'
    pool:
      vmImage: $(imageName)
    steps:
      - template: './Python format/azure-pipelines.yml'
