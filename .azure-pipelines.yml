trigger:
  - main

parameters:
- name: xcodeVersions
  type: object
  default:
    macOS_latest:
      name: macOS-latest
      version: ['Xcode_13.2', 'Xcode_13.1', 'Xcode_13.0', 'Xcode_12.5.1', 'Xcode_12.4', 'Xcode_11.7']
    macOS_11:  
      name: macOS-11
      version: ['Xcode_13.2', 'Xcode_13.1', 'Xcode_13.0', 'Xcode_12.5.1', 'Xcode_12.4', 'Xcode_11.7']
    macOS_10_14:
      name: macOS-10.14
      version: ['Xcode_11.3.1', 'Xcode_11.3', 'Xcode_11.2.1', 'Xcode_11.2', 'Xcode_11.1', 'Xcode_11', 'Xcode_10.3', 'Xcode_10.2.1', 'Xcode_10.2', 'Xcode_10.1', 'Xcode_10', 'Xcode_9.4.1']
    macOS_10_15:
      name: macOS-10.15
      version: ['Xcode_12.4', 'Xcode_12.3', 'Xcode_12.2', 'Xcode_12.1.1', 'Xcode_12.1', 'Xcode_12.0.1', 'Xcode_11.7', 'Xcode_11.6', 'Xcode_11.5', 'Xcode_11.4.1', 'Xcode_11.3.1', 'Xcode_11.2.1', 'Xcode_10.3']

jobs:
  - job: Chocolatey_test_environment
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
      - script: |
          cd "Chocolatey test environment on Ubuntu"
          sh setup.sh
          error_code=$?
          if [[ $error_code -eq 0 ]]; then
              exit 1
          fi
          exit 0
        displayName: Sets up the test environment of Chocolatey tests on Ubuntu
  - ${{ each xcodeVersion in parameters.xcodeVersions }}:
    - job: Xcode_version_${{ xcodeVersion.key }}
      pool:
        vmImage: '${{ xcodeVersion.value.name }}'
      steps:
      - template: './Xcode version/azure-pipelines.yml'
        parameters:
          xcode_versions: ${{ xcodeVersion.value.version }}
